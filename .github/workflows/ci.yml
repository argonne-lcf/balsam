name: CI
on:
  push:
    branches:
      - develop
  pull_request: {}
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Balsam
        run: |
          make install-dev
          pip freeze
      - name: Lint
        run: make lint
      - name: Check default Site settings.yml files
        run: make validate-defaults
      - name: Mypy (type checking)
        run: make mypy

  test-linux:
    name: Testing with Python${{ matrix.python-version }} on Ubuntu
    runs-on: ubuntu-latest
    services:
      postgres:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: balsam-test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9']
    env:
      PYTHON: ${{ matrix.python-version }}
      OS: ubuntu
      BALSAM_TEST_DB_URL: postgresql://postgres:postgres@localhost:5432/balsam-test
      PYTHONUNBUFFERED: 1
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python env
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install mpich
        run: sudo apt-get install -y -q mpich libmpich-dev
      - name: Install Balsam
        run: |
          make install-dev
          pip freeze
      - name: tests
        run: make testcov
      - name: Archive test logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-logs
          path: pytest-logs/
      - run: coverage xml
      - uses: codecov/codecov-action@v1.2.1
        with:
          files: ./coverage.xml
          env_vars: PYTHON,OS

  container-test:
    name: Build, Test, Publish Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker-compose build
      - name: Start service
        run: docker-compose up
      - name: Test container
        run: make test-container
      - name: Cleanup service
        run: docker-compose down

      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: masalim2/balsam
          tag_with_ref: true 
