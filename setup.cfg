[metadata]
name = balsam-flow
version = 0.0.1
description = HPC Workflows & Edge Service
long_description = file: README.md, LICENSE.md
long_description_content_type=text/markdown

url = https://balsam.readthedocs.io
project_urls = 
    Source = https://github.com/balsam-alcf/balsam
    Documentation = https://balsam.readthedocs.io

author = Misha Salim, Thomas Uram, Taylor Childers
author_email = msalim@anl.gov
license = BSD 3-Clause License
keywords = workflows, hpc, scientific, workflow
classifiers = 
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Framework :: Django
    Development Status :: 5 - Production/Stable
    License :: OSI Approved :: BSD License
    Intended Audience :: Science/Research
    Topic :: Scientific/Engineering

[options]
packages= find:
install_requires = 
    pyyaml
    multiprocessing-logging
    Click
    inquirer
    pydantic[dotenv]
    python-dateutil
    jinja2
    requests
    psutil
    globus-cli
    pyzmq
python_requires = >=3.6
scripts = 
    balsam/cmdline/balsamactivate

[options.extras_require]
dev =
    coverage 
    black
    flake8
    pre-commit
    pytest
    pytest-cov
    isort
    sqlalchemy-stubs
    mypy
server =
    psycopg2
    fastapi[all]
    gunicorn
    PyJWT
    passlib[bcrypt]
    alembic
    SQLAlchemy
    redis
    aredis
docs =
    mkdocs-material
    IPython
    mkdocs


[options.packages.find]
exclude =
    tests
    docs
    
[options.package_data]
balsam =
    server/settings.yml
    server/default-redis.conf
    django_config/job-templates/*.tmpl

[options.entry_points]
console_scripts =
    balsam=balsam.cmdline:main

[flake8]
exclude = .git,*migrations*,*alembic*
max-line-length = 118
extend-ignore = E203,W503,E501,E302,E231
max-complexity = 14

[tool:pytest]
# https://docs.pytest.org/en/stable/customize.html
addopts = -x  --show-capture=all
junit_family=xunit1
filterwarnings =
    ignore::DeprecationWarning


[coverage:run]
branch = True
source = balsam
concurrency = multiprocessing thread
parallel = True

[coverage:report]
precision = 2
exclude_lines =
    raise NotImplementedError
    raise NotImplemented

[isort]
line_length = 118
profile = black
known_first_party=balsam
multi_line_output=3
combine_as_imports=True

[mypy]
show_error_codes = True
check_untyped_defs = True
follow_imports = normal
strict_optional = True
plugins = sqlmypy, pydantic.mypy
strict = True
disallow_untyped_defs = True
#warn_redundant_casts = True
#warn_unused_ignores = False
#disallow_any_generics = True
#no_implicit_reexport = True
#warn_unused_configs = True
#disallow_subclassing_any = True
#disallow_incomplete_defs = True
#disallow_untyped_decorators = True
#disallow_untyped_calls = False
#ignore_missing_imports = True


[mypy-sqlalchemy.orm.exc]
ignore_missing_imports = True

[mypy-balsam.server.models.alembic]
ignore_missing_imports = True
