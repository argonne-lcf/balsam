[metadata]
name = balsam-flow
version = attr: balsam.__version__
description = HPC Workflows & Edge Service
long_description = file: docs/README.md
long_description_content_type=text/markdown

url = https://balsam.readthedocs.io
project_urls = 
    Source = https://github.com/argonne-lcf/balsam
    Documentation = https://argonne-lcf.github.io/balsam

author = Misha Salim, Thomas Uram, J. Taylor Childers
author_email = msalim@anl.gov
license = BSD 3-Clause License
keywords = workflows, hpc, scientific, workflow
classifiers = 
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Development Status :: 3 - Alpha
    License :: OSI Approved :: BSD License
    Intended Audience :: Science/Research
    Topic :: Scientific/Engineering

[options]
packages = find:
python_requires = >=3.7

# Not pinning versions here; intentionally flexible client deps:
install_requires = 
    pyyaml
    multiprocessing-logging
    Click
    inquirer
    pydantic[dotenv]
    python-dateutil
    jinja2
    requests
    psutil
    globus-cli
    pyzmq

[options.packages.find]
exclude =
    tests
    docs

[options.package_data]
balsam =
    config/defaults
    config/defaults/*
    config/defaults/*/*
    config/defaults/*/*/*

[options.entry_points]
console_scripts =
    balsam=balsam.cmdline:main

[flake8] 
exclude = .git,*migrations*,*alembic*
max-line-length = 118
extend-ignore = E203,W503,E501,E302,E231
max-complexity = 14

[tool:pytest]
# https://docs.pytest.org/en/stable/customize.html
addopts = -x
junit_family=xunit1
filterwarnings =
    ignore::DeprecationWarning
markers =
    alcf_theta: Runs on ACLF Theta-KNL
    alcf_thetagpu: Runs on ALCF ThetaGPU 
    alcf_cooley: Runs on ALCF Cooley



[coverage:run]
branch = True
source = balsam
concurrency = multiprocessing thread
parallel = True

[coverage:report]
precision = 2
exclude_lines =
    raise NotImplementedError
    raise NotImplemented

[isort]
line_length = 118
profile = black
known_first_party=balsam
multi_line_output=3
combine_as_imports=True

[mypy]
show_error_codes = True
check_untyped_defs = True
follow_imports = normal
strict_optional = True
plugins = sqlmypy, pydantic.mypy
strict = True
disallow_untyped_defs = True


[mypy-sqlalchemy.orm.exc]
ignore_missing_imports = True

[mypy-balsam.server.models.alembic]
ignore_missing_imports = True
