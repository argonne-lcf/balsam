version: '2.1'

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}
    pgdata:
       external: true
       name: balsam_pgdata

services:


  balsam-web:
    image: anl/balsam-web
    container_name: balsam-web
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/balsam
    networks:
      - monitor-net
    ports:
      - 5000:5000

  balsam-ui:
    image: anl/balsam-ui
    container_name: balsam-ui
    restart: always
    depends_on:
      - balsam-web
    networks:
      - monitor-net
    ports:
      - 8007:8080

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    networks:
      - monitor-net
    environment:
      PGADMIN_DEFAULT_EMAIL: balsam@anl.gov
      PGADMIN_DEFAULT_PASSWORD: y9lhFN1XbnVMNRyI
    ports:
      - 8008:80

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    networks:
      - monitor-net
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  gunicorn:
    container_name: gunicorn
    build: .
    image: anl/balsam
    restart: always
    networks:
      - monitor-net
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file: ".env"
    environment:
      SERVER_PORT: ${SERVER_PORT}
      BALSAM_LOG_DIR: ${BALSAM_LOG_DIR}
    volumes:
      - "${BALSAM_LOG_DIR}:/balsam/log"
      - "./balsam:/balsam/balsam:ro"
      - "./tests:/balsam/tests:ro"
      - "${PWD}/${GUNICORN_CONFIG_FILE}:/balsam/gunicorn.conf.py:ro" # Must be abs path

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: balsam
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    command: "-c log_min_duration_statement=0"
    networks:
      - monitor-net
    logging:
      options:
        max-size: "50m"
        max-file: "5"
      driver: "json-file"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 6

  redis:
    networks:
      - monitor-net
    container_name: redis
    image: redis
    restart: always
    ports:
      - 6379:6379

  statsd:
    container_name: statsd
    image: prom/statsd-exporter
    command: 
      - '--statsd.mapping-config=/tmp/statsd_mapping.conf'
    networks:
      - monitor-net
    ports:
      - "9102:9102"
      - "9125:9125/udp"
    volumes:
      - "./statsd.conf:/tmp/statsd_mapping.conf"

  pushgateway:
    image: prom/pushgateway:v1.2.0
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/google-containers/cadvisor:v0.34.0
    container_name: cadvisor
    networks:
      - monitor-net
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    ports:
      - 8080:8080
    labels:
      org.label-schema.group: "monitoring"
    restart: always

  nginxexporter:
    image: nginx/nginx-prometheus-exporter:0.10.0 
    container_name: nginxexporter
    command: -nginx.scrape-uri=https://balsam-dev.alcf.anl.gov/basic_status
    networks:
      - monitor-net
    ports:
      - 9113:9113
    labels:
      org.label-schema.group: "monitoring"
    
  nginx-exporter:
    image: quay.io/martinhelmich/prometheus-nginxlog-exporter
    container_name: nginx-exporter
    networks:
      - monitor-net
    volumes:
      - /var/log/nginx:/mnt/nginxlogs
      - /home/dgovoni/balsam.hcl:/etc/prometheus-nginxlog-exporter.hcl
    command: -config-file /etc/prometheus-nginxlog-exporter.hcl
    ports:
      - 4040:4040
    labels:
      org.label-schema.group: "monitoring"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - monitor-net
    ports:
      - 9090:9090
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:v0.20.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    networks:
      - monitor-net
    ports:
      - 9093:9093
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    networks:
      - monitor-net
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitor-net
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=smtp.anl.gov:587
      - GF_SMTP_USER=dgovoni@anl.gov
      - GF_SMTP_PASSWORD=Shelby!1965!GT350!
    ports:
      - 3000:3000
    labels:
      org.label-schema.group: "monitoring"

